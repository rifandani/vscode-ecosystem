{
  "publisher": "rifandani",
  "name": "vscode-ecosystem",
  "displayName": "Vscode Ecosystem",
  "version": "1.7.1",
  "packageManager": "pnpm@8.11.0",
  "description": "My personal Vscode extensions mainly for frontend development",
  "author": "Tri Rizeki Rifandani <tri.rifandani@gmail.com>",
  "license": "MIT",
  "homepage": "https://github.com/rifandani/vscode-ecosystem#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/rifandani/vscode-ecosystem"
  },
  "bugs": {
    "url": "https://github.com/rifandani/vscode-ecosystem/issues"
  },
  "keywords": [
    "highlight",
    "logger",
    "region",
    "snippet"
  ],
  "categories": [
    "Other",
    "Snippets"
  ],
  "main": "./dist/index.js",
  "icon": "res/panda.png",
  "files": [
    "dist"
  ],
  "engines": {
    "vscode": "^1.84.2"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "configuration": {
      "title": "Vscode Ecosystem",
      "properties": {
        "veco.highlight.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the highlighting"
        },
        "veco.highlight.toggleURI": {
          "type": "boolean",
          "default": false,
          "description": "If the file path within the output channel is not clickable, set this to true to toggle the path patten between `<path>#<line>` and `<path>:<line>:<column>`"
        },
        "veco.highlight.isCaseSensitive": {
          "type": "boolean",
          "default": true,
          "description": "Specify whether the keywords are case sensitive or not"
        },
        "veco.highlight.enableDiagnostics": {
          "type": "boolean",
          "default": false,
          "description": "Enable creating entries in the problems view."
        },
        "veco.highlight.maxFilesForSearch": {
          "type": "number",
          "default": 5120,
          "description": "Max files for searching"
        },
        "veco.highlight.defaultStyle": {
          "type": "object",
          "properties": {
            "backgroundColor": {
              "type": "string",
              "description": "The background color for the highlight."
            },
            "border": {
              "type": "string",
              "description": "The border style for the highlight, as a CSS string."
            },
            "color": {
              "type": "string",
              "markdownDescription": "The text color."
            },
            "cursor": {
              "type": "string",
              "description": "The style for the cursor shown over the highlight, as a CSS property."
            },
            "isWholeLine": {
              "type": "boolean",
              "default": false,
              "description": "If true, then the whole line is highlighted, not just the matching text."
            },
            "overviewRulerColor": {
              "type": "string",
              "description": "The color of the ruler mark on the scroll bar."
            }
          },
          "default": {
            "color": "#2196f3",
            "backgroundColor": "#ffeb3b"
          },
          "$comment": "The selection of properties for autocompletion are the same as for `veco.highlight.keywords`",
          "description": "Default style for all customized keywords. See all available properties in the VSCode doc on `DecorationRenderOptions` section."
        },
        "veco.highlight.keywords": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Custom text to be highlighted."
                  },
                  "diagnosticSeverity": {
                    "type": "string",
                    "default": "none",
                    "enum": [
                      "error",
                      "warning",
                      "information",
                      "hint",
                      "none"
                    ],
                    "description": "If set to 'none', it will do nothing. Otherwise it will set the diagnostic severity in the problems view."
                  },
                  "regex": {
                    "type": "object",
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "description": "The RegEx pattern to use for matching instead of the text value. REMEMBER to escape any backslashes in your regexp (using \\\\ instead of single backslash)."
                      }
                    }
                  },
                  "backgroundColor": {
                    "type": "string",
                    "description": "The text background color."
                  },
                  "border": {
                    "type": "string",
                    "description": "The border style for the highlight, as a CSS string."
                  },
                  "color": {
                    "type": "string",
                    "description": "The text color. "
                  },
                  "cursor": {
                    "type": "string",
                    "description": "The style for the cursor shown over the highlight, as a CSS property."
                  },
                  "isWholeLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, then the whole line is highlighted, not just the matching text."
                  },
                  "overviewRulerColor": {
                    "type": "string",
                    "description": "The color of the ruler mark on the scroll bar."
                  }
                },
                "$comment": "text and regex are self defined. The selection of the other properties for autocompletion are the same as for veco.highlight.keywords."
              }
            ]
          },
          "default": [
            {
              "text": "NOTE:",
              "diagnosticSeverity": "information",
              "color": "#fff",
              "backgroundColor": "rgba(27,154,170,1)",
              "overviewRulerColor": "rgba(27,154,170,0.8)"
            },
            {
              "text": "TODO:",
              "diagnosticSeverity": "warning",
              "color": "#fff",
              "backgroundColor": "rgba(255,197,61,1)",
              "overviewRulerColor": "rgba(255,197,61,0.8)"
            },
            {
              "text": "FIXME:",
              "diagnosticSeverity": "error",
              "color": "#fff",
              "backgroundColor": "rgba(239,71,110,1)",
              "overviewRulerColor": "rgba(239,71,110,0.8)"
            }
          ],
          "description": "An array of keywords, and their CSS to customise how they look. See all available properties in the VSCode doc on DecorationRenderOptions section."
        },
        "veco.highlight.keywordsPattern": {
          "type": "string",
          "default": "",
          "description": "Specify keywords via RegExp instead of `veco.highlight.keywords` one by one. NOTE that if this present, `veco.highlight.keywords` will be ignored. REMEMBER to escape any backslashes in your regexp (using \\\\ instead of single backslash)."
        },
        "veco.highlight.include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/*.js",
            "**/*.jsx",
            "**/*.ts",
            "**/*.tsx",
            "**/*.vue",
            "**/*.svelte",
            "**/*.astro",
            "**/*.html",
            "**/*.php",
            "**/*.css",
            "**/*.scss",
            "**/*.less",
            "**/*.md",
            "**/*.mdx",
            "**/*.json"
          ],
          "description": "Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both performance and to avoid binary files."
        },
        "veco.highlight.exclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/node_modules/**",
            "**/bower_components/**",
            "**/dev-dist/**",
            "**/dist/**",
            "**/build/**",
            "**/html/**",
            "**/coverage/**",
            "**/out/**",
            "**/.vscode/**",
            "**/.vscode-test/**",
            "**/.github/**",
            "**/_output/**",
            "**/*.min.*",
            "**/*.map",
            "**/.next/**"
          ],
          "description": "Glob pattern that defines files and folders to exclude while listing annotations."
        },
        "veco.colorize.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the web colors colorizer"
        },
        "veco.colorize.namedColor": {
          "type": "boolean",
          "default": false,
          "description": "Also colorize named color (e.g red, black, white, grey, green, etc.)"
        },
        "veco.colorize.decorationType": {
          "default": "background",
          "description": "Decoration type to highlight the colors",
          "type": "string",
          "enum": [
            "background",
            "foreground",
            "outline",
            "underline",
            "dot-before",
            "dot-after"
          ]
        },
        "veco.colorize.include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/*.js",
            "**/*.jsx",
            "**/*.ts",
            "**/*.tsx",
            "**/*.vue",
            "**/*.svelte",
            "**/*.astro",
            "**/*.html",
            "**/*.css",
            "**/*.scss",
            "**/*.less",
            "**/*.md",
            "**/*.mdx",
            "**/*.json"
          ],
          "description": "Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both performance and to avoid binary files."
        },
        "veco.colorize.exclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/node_modules/**",
            "**/bower_components/**",
            "**/dev-dist/**",
            "**/dist/**",
            "**/build/**",
            "**/html/**",
            "**/coverage/**",
            "**/out/**",
            "**/.vscode/**",
            "**/.vscode-test/**",
            "**/.github/**",
            "**/_output/**",
            "**/*.min.*",
            "**/*.map",
            "**/.next/**"
          ],
          "description": "Glob pattern that defines files and folders to exclude while listing annotations."
        },
        "veco.packager.moduleTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "prod",
            "dev"
          ],
          "description": "Check one or more types of dependencies only. For most cases, you only need \"prod\" and \"dev\", because the more types you include, the more deep the dependencies will be shown"
        },
        "veco.packager.versionTarget": {
          "type": "string",
          "default": "semver",
          "enum": [
            "semver",
            "latest",
            "newest",
            "greatest",
            "minor",
            "patch"
          ],
          "description": "Determines the version to upgrade to."
        },
        "veco.deliner.include": {
          "type": "string",
          "default": "**/*.*",
          "description": "Glob patterns that defines the files and folders to include in the search"
        },
        "veco.deliner.exclude": {
          "type": "string",
          "default": "**/{node_modules,bower_components,dev-dist,dist,build,html,coverage,out,.vscode,.vscode-test,.github,_output,.next}/**",
          "description": "Glob patterns that defines the files and folders to exclude"
        }
      }
    },
    "snippets": [
      {
        "language": "javascript",
        "path": "./src/snippets/react.json"
      },
      {
        "language": "javascriptreact",
        "path": "./src/snippets/react.json"
      },
      {
        "language": "typescript",
        "path": "./src/snippets/react.json"
      },
      {
        "language": "typescriptreact",
        "path": "./src/snippets/react.json"
      }
    ],
    "commands": [
      {
        "title": "Toggle enable/disable highlight",
        "category": "Veco - Highlight",
        "command": "veco.highlight.toggleEnabled"
      },
      {
        "title": "List highlighted annotations",
        "category": "Veco - Highlight",
        "command": "veco.highlight.listAnnotations"
      },
      {
        "title": "Show highlight output channel",
        "category": "Veco - Highlight",
        "command": "veco.highlight.showOutputChannel"
      },
      {
        "title": "Apply file nesting config",
        "category": "Veco - File Nesting",
        "command": "veco.fileNesting.apply"
      },
      {
        "title": "Remove file nesting config",
        "category": "Veco - File Nesting",
        "command": "veco.fileNesting.remove"
      },
      {
        "title": "Toggle enable/disable colorize",
        "category": "Veco - Colorize",
        "command": "veco.colorize.toggleEnabled"
      },
      {
        "title": "Insert log message",
        "category": "Veco - Logger",
        "command": "veco.logger.insert"
      },
      {
        "title": "Comment out all log messages",
        "category": "Veco - Logger",
        "command": "veco.logger.comment"
      },
      {
        "title": "Uncomment all commented log messages",
        "category": "Veco - Logger",
        "command": "veco.logger.uncomment"
      },
      {
        "title": "Delete all log messages",
        "category": "Veco - Logger",
        "command": "veco.logger.delete"
      },
      {
        "title": "Insert region marker comment",
        "category": "Veco - Region",
        "command": "veco.region.mark"
      },
      {
        "title": "Delete all region markers in the current document",
        "category": "Veco - Region",
        "command": "veco.region.delete"
      },
      {
        "title": "Delete all region markers across workspace",
        "category": "Veco - Region",
        "command": "veco.region.deleteAll"
      },
      {
        "title": "Refresh Dependencies List",
        "category": "Veco - Packager",
        "command": "veco.packager.refreshEntry",
        "icon": "$(refresh)"
      },
      {
        "title": "Link Dependency to NPM Website",
        "category": "Veco - Packager",
        "command": "veco.packager.link",
        "icon": "$(link-external)"
      },
      {
        "title": "Remove Dependency",
        "category": "Veco - Packager",
        "command": "veco.packager.remove",
        "icon": "$(trash)"
      },
      {
        "title": "Update All Dependencies",
        "category": "Veco - Packager",
        "command": "veco.packager.updateAll",
        "icon": "$(fold-up)"
      },
      {
        "title": "Update Dependency",
        "category": "Veco - Packager",
        "command": "veco.packager.updateSingle",
        "icon": "$(chevron-up)"
      },
      {
        "title": "Delete all lines given by the input",
        "category": "Veco - Deliner",
        "command": "veco.deliner.deleteAll",
        "icon": "$(trash)"
      }
    ],
    "keybindings": [
      {
        "command": "veco.logger.insert",
        "key": "alt+shift+i",
        "mac": "alt+shift+i"
      },
      {
        "command": "veco.logger.comment",
        "key": "alt+shift+c",
        "mac": "alt+shift+c"
      },
      {
        "command": "veco.logger.uncomment",
        "key": "alt+shift+u",
        "mac": "alt+shift+u"
      },
      {
        "command": "veco.logger.delete",
        "key": "alt+shift+d",
        "mac": "alt+shift+d"
      },
      {
        "command": "veco.region.mark",
        "key": "ctrl+m ctrl+r",
        "mac": "ctrl+m ctrl+r",
        "when": "editorTextFocus"
      },
      {
        "command": "veco.region.delete",
        "key": "ctrl+m ctrl+d",
        "mac": "ctrl+m ctrl+d"
      },
      {
        "command": "veco.region.deleteAll",
        "key": "ctrl+m ctrl+a",
        "mac": "ctrl+m ctrl+a"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "veco_packager",
          "title": "Packager",
          "icon": "$(package)"
        }
      ]
    },
    "views": {
      "veco_packager": [
        {
          "id": "veco_packager.treeDataProvider",
          "name": "Dependencies"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "veco.packager.refreshEntry",
          "when": "view == veco_packager.treeDataProvider",
          "group": "navigation"
        },
        {
          "command": "veco.packager.updateAll",
          "when": "view == veco_packager.treeDataProvider",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "veco.packager.remove",
          "group": "inline",
          "when": "viewItem == dependencies || viewItem == devDependencies || viewItem == peerDependencies || viewItem == optionalDependencies || viewItem == updatableDependencies || viewItem == updatableDevDependencies || viewItem == updatablePeerDependencies || viewItem == updatableOptionalDependencies"
        },
        {
          "command": "veco.packager.updateSingle",
          "group": "inline",
          "when": "viewItem == updatableDependencies || viewItem == updatableDevDependencies || viewItem == updatablePeerDependencies || viewItem == updatableOptionalDependencies"
        },
        {
          "command": "veco.packager.link",
          "group": "inline",
          "when": "view == veco_packager.treeDataProvider"
        }
      ]
    }
  },
  "scripts": {
    "typecheck": "tsc --noEmit",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "test": "vitest",
    "dev": "nr build --watch",
    "build": "tsup src/index.ts --external vscode",
    "vscode:package": "vsce package --no-dependencies",
    "vscode:prepublish": "nr build",
    "vscode:publish": "vsce publish --no-dependencies",
    "npm:pack": "npm pack",
    "npm:publish": "npm publish",
    "release": "bumpp && nr vscode:publish && nr npm:publish"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^2.1.0",
    "@antfu/ni": "^0.21.10",
    "@rifandani/nxact-yutiriti": "^1.2.2",
    "@types/node": "^20.10.0",
    "@types/vscode": "^1.84.2",
    "@vscode/vsce": "^2.22.0",
    "bumpp": "^9.2.0",
    "colorjs.io": "^0.4.5",
    "eslint": "^8.54.0",
    "esno": "^4.0.0",
    "lint-staged": "^15.1.0",
    "minimatch": "^9.0.3",
    "npm-check-updates": "^16.14.12",
    "pnpm": "^8.11.0",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "simple-git-hooks": "^2.9.0",
    "tsup": "^8.0.1",
    "type-fest": "^4.8.2",
    "typescript": "^5.3.2",
    "vite": "^5.0.2",
    "vitest": "^0.34.6"
  },
  "simple-git-hooks": {
    "pre-commit": "pnpm lint-staged"
  },
  "lint-staged": {
    "*": "eslint . --fix"
  }
}
